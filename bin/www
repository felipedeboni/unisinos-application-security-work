#!/usr/bin/env node

'use strict';

/**
 * Dependencias
 */
var config = require( '../package.json' );
var app = require( '../app' );
var debug = require( 'debug' )( config.name );
var http = require( 'http' );

/**
 * Pega a porta do ENV ou usa a padrao
 */
var port = normalizePort( process.env.PORT || '3000' );
app.set( 'port', port );

/**
 * Cria o servidor ( imagina como se fosse um apache ou iis )
 */
var server = http.createServer( app );

/**
 * Configura o servidor pra escutar na porta,
 * e escuta dois eventos do servidor
 */
server.listen( port );
server.on( 'error', onError );
server.on( 'listening', onListening );

/**
 * Tenta converter pra inteiro a porta
 * e retorna de acordo
 */
function normalizePort( val ) {
	var port = parseInt( val, 10 );

	if ( isNaN( port ) ) {
		return val;
	}

	if ( port >= 0 ) {
		return port;
	}

	return false;
}

/**
 * Quando ocorrer um erro, essa fun√ßao vai tratar
 */
function onError( error ) {
	if ( error.syscall !== 'listen' ) {
		throw error;
	}

	var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

	// tem alguns erros do node que tem uns lixo de mensagem
	// aqui tem um tratamento com umas mensagens mais decentes
	switch ( error.code ) {

		case 'EACCES':
			console.error( bind + ' requires elevated privileges' );
			process.exit( 1 );
			break;

		case 'EADDRINUSE':
			console.error( bind + ' is already in use' );
			process.exit( 1 );
			break;

		default:
			console.log( bind + ' ' + error );
			throw error;

	}
}

/**
 * Quando o server inicicar, ele mostra essa mensagem bonitinha
 */
function onListening() {
	var addr = server.address();
	var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
	debug( 'Listening on ' + bind );
}
